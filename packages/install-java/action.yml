name: 'Install Java for Mulesoft Applications'
description: 'Install Java for Mulesoft Applications'
inputs:
  github-configurations-accesstoken:
    required: true
    description: Token to access the configuration repository
  default-settings-xml:
    required: true
    description: Default file for settings.xml in case the service doesn't have any configured

runs:
  using: "composite"
  steps:

    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
              
    - name: Setup JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        #check-latest: true
        cache: 'maven'

    - id: configuration
      name: Get configuration for the service 
      shell: bash
      run: |
        echo " "
        echo "*********************************************"
        echo "Get the settings configuration file for maven"
        echo "*********************************************"
        echo " "
        settings_xml="${{ inputs.default-settings-xml}}"

        if [ "$configuration_settings" = "null" ] || [ "$configuration_settings" = "" ] ; then
          echo "Assigning the default settings file"
        else
          echo "The service will use the next settings file: $configuration_settings"
          settings_xml="$configuration_settings"
        fi

        echo " "
        echo "Getting settings file: $settings_xml"
        urlconfigurationfile="https://raw.githubusercontent.com/${{ github.repository_owner }}/$CONFIGURATIONS_REPOSITORY/main/$settings_xml"
        echo "  URL file: $urlconfigurationfile"
        configurationdata=$(curl -sH "Authorization: token ${{inputs.github-configurations-accesstoken}}" $urlconfigurationfile)

        if [ "$configurationdata" == "404: Not Found" ] ; then
          echo "  The file was not found in the repository. Response: $configurationdata"
          exit 1
        fi

        echo "  The content of the file is: $configurationdata"
        output=$(echo "$configurationdata" | envsubst)
        echo "$output" > $HOME/.m2/settings.xml

        echo " "
        echo "Verifying configuration. HOME Directory: $HOME"
        ls -la $HOME
        temporal=$(cat $HOME/.m2/settings.xml)
        echo "settings.xml file: $temporal"